body {
    font-family: Tahoma, Geneva, sans-serif;
}

#object-tree {
    height: 60vh;
    overflow-y: auto;
    background-color: black;
    color: #eeeeee;
}

.node-data-container {
    font-size: 18px;
    user-select: none;
}

.root {
    padding-top: 5px;
    height: fit-content;
}

.node-aligner {
    padding-bottom: 3px;
}

:not(.root) > .node-aligner {
    padding-left: 0.35em;
}

.node .node .node {
    margin-left: 1.8em;
}

.node-data-container:not(.middle):not(.root):last-child, .node-data-container:not(.middle):not(.root) + .focused {
    /*
    Using border rather than margin/padding
    prevents root being hoverable at the bottom &
    prevents the background image extending further.
     */
    border-bottom: 0.4em transparent;
}

.node.focused .node:not(.focused) {
    display: none;
}

.node-data-container {
    padding-left: 0.4em;
    background-size: 5px;
    background-image: linear-gradient(#bbb, #bbb);
    background-repeat: no-repeat;
    transition: background-size 300ms, color 500ms;
}

.node-data-container:hover {
    color: black;
    background-size: 100%;
}

.node-button-wrapper {
    vertical-align: middle;
}

#object-tree.locked .node-button-container {
    visibility: hidden;
}

.node-button-svg {
    width: 1.5em;
    cursor: pointer;
}

.node-button-container.blur .node-button-svg {
    filter: url(#svg-blur);
}

.node-button-container.blur .node-button-svg:not(:hover) {
    opacity: 0.5;
}

.node-button-container.blur circle {
    opacity: 0;
}

.node-button-container g {
    opacity: 0.5;
}

.node-button-svg:hover g {
    opacity: 1;
}

.node-button-delete {
    stroke: red;
}

.node-button-create {
    stroke: yellow;
}

.node-button-edit {
    stroke: lawngreen;
}

.node-button-move {
    stroke: mediumpurple;
}

.node-label, .node-value {
    white-space: pre;
}

#object-tree.locked .node-value {
    display: none;
}

#object-tree:not(.locked) .node-label {
    display: none;
}
